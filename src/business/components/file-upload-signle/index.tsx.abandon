import React from "react";

import { addon } from "pao-aop";

import { reactControl, BaseReactElementControl } from "pao-aop-client";
import { Upload, message } from "antd";
import "./index.less";
import { IFileUpload, UploadFac, __FILE_INFO__, UploadType } from "./interface";

/**
 * 组件：文章表单控件状态
 */
export class FileUploadSingleState {
    /** 预览url */
    stateInfo?: string | __FILE_INFO__[];
    /**
     * 图片是否处于上传状态
     */
    loading?: boolean;
    /**
     * 后台返回的imgUrl
     */
    uploadFac?: IFileUpload;
}

/**
 * 组件：文章表单控件
 */
export class FileUploadSingle extends React.Component<FileUploadSingleControl, FileUploadSingleState> {
    constructor(props: FileUploadSingleControl) {
        super(props);
        let uploadFac: IFileUpload = UploadFac.CreateUpload(this.props.type, this.props.value as any);

        this.state = {
            uploadFac: uploadFac,
            stateInfo: uploadFac.getStateInfo(),
        };
    }

    beforeUpload = (file: File) => {
        return true;
    }

    /** 处理上传过程的渲染元素 */
    private handleUploadChange = (info: any) => {
        let { uploadFac } = this.state;

        if (info.file.status === 'uploading') {
            uploadFac!.uploadingCb!();
            return;
        }
        if (info.file.status === 'done') {
            const onChange = this.props.onChange;

            message.info(`${info.file.name} 上传成功`);

            uploadFac!.uploadDoneCb!(info.file);

            this.setState(
                {
                    stateInfo: this.state.uploadFac!.getStateInfo() as any
                }
            );

            let onChangeVal = uploadFac!.getOnchangeVal();
            if (onChange) {
                onChange(onChangeVal as any);
            }
        } else if (info.file.status === 'error') {
            message.error(`文件上传出现错误：${info.file.name}.`);
        }
    }

    render() {
        let { upload_url } = this.props;
        let { uploadFac } = this.state;

        let props = uploadFac!.getUploadProps();
        let render = uploadFac!.getUploadRender();

        return (
            <Upload
                {...props}
                onChange={this.handleUploadChange}
                beforeUpload={this.beforeUpload}
                action={upload_url}
            >
                {render}
            </Upload>
        );
    }
}

/**
 * 控件：文章表单控件
 * 控制文章表单控件
 */
@addon('FileUploadSingleControl', '文章表单控件', '控制文章表单控件')
@reactControl(FileUploadSingle)
export class FileUploadSingleControl extends BaseReactElementControl {
    /**
     * upload 地址
     */
    upload_url: string;

    /**
     * 上传组件类型
     * 
     * @param "preview" 预览图片类型
     * @param "file_list" 列表类型
     */
    type: UploadType;
}